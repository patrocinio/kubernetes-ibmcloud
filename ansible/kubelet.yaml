- name: Make the Swap inactive
  command: swapoff -a

- name: Remove Swap entry from /etc/fstab.
  lineinfile:
    dest: /etc/fstab
    regexp: swap
    state: absent

- name: Installing Prerequisites for Kubernetes
  apt: 
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - vim
      - software-properties-common
    state: present

- name: Add Dockerâ€™s official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Create directory /var/lib/apt/lists/ if it does not exist
  ansible.builtin.file:
    path: /var/lib/apt/lists/
    state: directory
    mode: '0755'

- name: Add Docker Repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
    state: present
    filename: docker
    mode: 0600
    validate_certs: no 
  ignore_errors: yes

- name: Create containerd file
  copy:
    dest: "/etc/modules-load.d/containerd.conf"
    content: |
      overlay
      br_netfilter
      

- name: Add some modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
     - overlay
     - br_netfilter 

- name: Create CRI configuration file
  copy:
    dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply sysctl params
  command: sysctl --system

- name: Create directory /etc/containerd if it does not exist
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Install Containerd
  apt: 
    name:
#      - docker-ce
#      - docker-ce-cli
      - containerd.io
    state: present

- name: Remove disabled_plugins line
  lineinfile:
    path: "/etc/containerd/config.toml"
    regexp: "disabled_plugins"
    state: absent

#- meta: end_play

- name: Retrieve containerd configuration
  command: containerd config default 
  register: containerd_config

- blockinfile: |
    dest=/etc/containerd/config.toml
    content="{{ containerd_config.stdout }}"

- name: Use systemd with containerd
  lineinfile:
    dest: "/etc/containerd/config.toml"
    insertafter: 'containerd.runtimes.runc.options'
    line: " SystemdCgroup = true"

- name: Restart containerd
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: containerd
      
- name: Add Kubernetes GPG key
  command: curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Kubernetes repository (Debian)
  apt_repository:
      repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      validate_certs: no 

- name: Install kubeadm
  package: name=kubeadm state=present

- name: Install kubelet
  package: name=kubelet state=present

- name: Configure kubelet to use containerd
  copy:
    dest: "/etc/systemd/system/kubelet.service.d/0-containerd.conf"
    content: | 
      [Service]                                                 
      Environment="KUBELET_EXTRA_ARGS=--container-runtime=remote --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock"

- name: Let iptables see bridged traffic - part 1
  copy:
    dest: "/etc/modules-load.d/k8s.conf"
    content: | 
      br_netfilter

- name: Let iptables see bridged traffic - part 2
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: | 
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
   
- name: Restart kubelet
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet

    #- name: Remove network arguments
#  replace: 
#    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
#    regexp: '^(ExecStart.*)\$KUBELET_NETWORK_ARGS(.*)$'
#    replace: \1\2
#    backup: yes

- name: Install kubectl
  package: name=kubectl state=present

- name: Install kubenetes-cni
  package: name=kubernetes-cni state=present

#- name: Enable docker
#  shell: systemctl enable docker && systemctl start docker 

- name: Enable kubelet
  shell: systemctl enable kubelet && systemctl start kubelet

